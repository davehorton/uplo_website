.image.image-browse
  .slideshow-container.clearfix
    .top-container
      .left-container.clearfix.left
        .gallery-container.round-box
          .gallery-image
            .image-content
              = image_tag url_for(:controller => 'images', :action => 'get_image_data', :id => @selected_image.id, :size => 'medium'), :id => "origin-pic"

      = simple_form_for(:image, :id => @selected_image, :action => :update, :method => 'put', :html => {:id => "frmImageData"}) do |f|
        .right-container.right
          .button-container.round-box.blue-gradient
            %ul
              %li
                %div
                  = button_to_function I18n.t("slideshow.cancel"), "makeConfirmation()",
                      :class => 'link-button', :data => {:href => "/back"}, :value => I18n.t("slideshow.cancel")

              %li
                %div
                  - order_url = url_for(:controller => 'images', :action => 'order', :id => params[:id])
                  %input.order{:type => "button", :value => "Order", :data => {:url => "#{order_url}"}}
              %li
                %div
                  - status_url = url_for(:controller => 'images', :action => 'get_filter_status', :id => params[:id])
                  = button_to_function I18n.t("slideshow.save"), "update_image()", :data => {:status_url => "#{status_url}"}, :class => "save"

          .edit-area.round-box.clearfix
            = (@selected_image.author ? @selected_image.author.fullname : "")
            %br.clearfix
            %ul
              %li
                = I18n.t("slideshow.picture_name")
              %li
                = f.text_field :name, :value => @selected_image.name
              %li
                = I18n.t("slideshow.description")
              %li
                = f.text_area :description, :value => @selected_image.description
              %li
                = f.hidden_field :filtered_effect

    .bottom-container.clearfix
      %div
        %ul#mycarousel.jcarousel-skin-tango
          - selected_image_position = 1
          - @images.each_with_index do |image, index|
            %li
              - url = url_for(:controller => "images", :action => "show", :id => "#{image.id}")
              %a{:href => "#{url}"}
                - if image.id == @selected_image.id
                  - selected_image_position = index
                  = image_tag(image.url(:thumb), :size => "70x70", :style => "border: solid 2px orange")
                - else
                  = image_tag(image.url(:thumb), :size => "75x75")

:erb
  <script type="text/javascript">
    $(".button-container").delegate(
      ".not-implement", "click", function() {
        helper.show_notification("This feature has not been implemented yet.");
        return false;
      }
    );
  </script>
  <script type="text/javascript">
    $(".button-container .order").click(function(){
      window.location.href = $(this).attr('data-url');
    });

    function update_image(){
      filtered_effect = $("#image_filtered_effect").attr("value");
      if(filtered_effect == ""){
        $("#frmImageData").submit();
      }else{
        $.ajax({
          url: $("#frmImageData").attr("action"),
          type: "PUT",
          data: $("#frmImageData").serialize(),
          dataType: "json",
          success: function(response){
            window.setTimeout( function(){ update_status(response.task_id); }, 3000);
          },
          fail: function(){}
        });
      }
    }

    function update_status(task_id){
      url = $(".button-container .save").attr("data-status-url");
      $.ajax({
        url: url,
        type: "POST",
        data: $("#frmImageData").serialize() + "&task_id=" + task_id,
        dataType: "json",
        success: function(response){
          if(response.success == false){
            window.setTimeout( function(){ update_status(task_id); }, 5000);
          }else if(response.status=="error"){
            helper.show_notification("ERROR! Your process has been stop!");
          }else if(response.status=="cancelled"){
            helper.show_notification("Your process has been cancelled!");
          }
        },
        fail: function(){}
      });
    }

    function clearFilter(){
      $(".image-content canvas").remove();
      $(".image-content #origin-pic").css("display", "inline-block");
    }

    function mycarousel_initCallback(carousel)
    {
      // Disable autoscrolling if the user clicks the prev or next button.
      carousel.buttonPrev.bind('click', function() {
          carousel.startAuto(0);
      });

      // Pause autoscrolling if the user moves with the cursor over the clip.
      carousel.clip.hover(function() {
          carousel.stopAuto();
      }, function() {
          carousel.startAuto();
      });
    };

    jQuery(document).ready(function() {
      jQuery('#mycarousel').jcarousel({
          auto: 2,
          start: <%= selected_image_position %>,
          scroll: 3,
          initCallback: mycarousel_initCallback,
          itemFallbackDimension: 180
      });
      jQuery('#filterCarousel').jcarousel({
          auto: 2,
          start: 1,
          scroll: 3,
          initCallback: mycarousel_initCallback,
          itemFallbackDimension: 180
      });
    });

    window.mask = new Mask();
    var loader_img = document.createElement("img");
    loader_img.src = "/assets/loading.gif";
    loader_img.style.width = "128px";
    loader_img.style.height = "128px";
    var loader = document.createElement("div");
    loader.id = "loader";
    loader.classList.add("loading");
    loader.appendChild(loader_img);
    $("body").append(loader);
    $("#loader").fadeOut(100);
    $("#filterCarousel").delegate(".filter-img", "click", function(){
      $this = $(this);
      window.mask.show();
      $("#loader").fadeIn(100);
      $(".image-content canvas").remove();
      $(".image-content #origin-pic").css("display", "inline-block");
      window.setTimeout(function(){
        EFFECTS[$this.attr("data-effect")]();
        $("#image_filtered_effect").attr("value", $this.attr("data-effect"));
      }, 30);
    });

    function makeConfirmation(){
      confirmDlg = new Popup({
        id: "clear-confirm-dialog",
        title: "Canceling confirm",
        text: "Please save your change(s) first. Do you still want to quit?",
        css: {width: "231px", textAlign: "center"},
        buttons:{
          "Yes": function(){
            url = $(".link-button").attr("data-href");
            console.log(url);
            window.location = url;
          },
          "No": function(){
            confirmDlg.hide();
          }
        }
      });
      confirmDlg.show();
    }
  </script>
