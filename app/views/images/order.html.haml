- content_for :head do
  = stylesheet_link_tag("scss/cart_new.css", "scss/new_image.css")
  = javascript_include_tag('app/image_util.js')

- content_for :top_content do
  .text.black.bold.font16{ :style => 'margin-bottom:8px;' }= @image.name

- content_for :right_content do
  - if @line_item.nil?
    - size = nil
    - moulding = nil
    - quantity = 1
    - action_url = url_for(:controller => "shopping_cart", :action => "add_to_cart", :image_id => @image.id)
  - else
    - size = @line_item.size
    - quantity = @line_item.quantity
    - moulding = @line_item.moulding
    - action_url = url_for(:controller => "shopping_cart", :action => "update_cart", :line_item_id => @line_item.id)
  .right
    .text.black.bold.font18 Build Your Order
    .line-separator
    = simple_form_for(:line_item, :url => action_url, :method => 'post', :html => { :id => 'order-details', :class => 'left' }) do |f|
      .round-box.option.left.print-sizes-container
        .header.text.black.bold.font14= "Print Size"
        .item.left
          = f.select :size, printed_sizes_options(@image, size)
      .round-box.option.left{:style => 'width:138px;'}
        .header.text.black.bold.font14= "Moulding Choice"
        .item.left
          = f.select :moulding, mounding_options(moulding)
      .round-box.option.right{:style => 'width:138px;'}
        .header.text.black.bold.font14= "Quantity"
        .item.left
          = f.text_field(:quantity, :value => quantity, :size => '5', :title => 'Limit from 1 to 99999')
      .line-separator.left
      .summary.left
        #discount.right
          .text.black.left Discount:
          .number.text.black.left= "- #{number_to_currency 0, {:precision => 2}}"
        #total.right
          .text.black.bold.left Subtotal:
          .number.text.black.bold.left= number_to_currency 0, {:precision => 2}
      .line-separator.left
      .button.add-to-cart.clear.right

.sections.clearfix
  .image-container-wrapper.clearfix
    #order-preview.image-container.medium.left
      #preview-frame.clearfix
        = image_tag(@image.data.url(:large), :class => 'image medium',
                  'data-width' => @image.width,
                  'data-height' => @image.height, :alt => @image.name)

- content_for :js do
  = javascript_tag do
    :erb
      var image_id = '<%= params[:id] %>';
      var pricing = <%= Image::TIERS_PRICES[@image.tier].to_json %>;
      var moulding_discount = <%= Image::MOULDING_DISCOUNT.to_json %>;

      // Scale and change the frame based on the print-size.
      $('.print-sizes-container .print-size').change(function(){
        if($(this).is(':checked')) {
          var print_sizes = $.trim($(this).val()).split('x');
          if(print_sizes.length >= 2){
            var img = $('#order-preview img');
            var parent = $(img).parents('.image-container');
            var max_width = parseFloat($(parent).css('max-width'), 10);

            var p_width = parseFloat(print_sizes[0]);
            var p_height = parseFloat(print_sizes[1]);

            var dpi = 72; //image_util.detect_dpi();
            p_width = image_util.inch_to_px(p_width, dpi);
            p_height = image_util.inch_to_px(p_height, dpi);

            var origin_width = parseFloat($(img).attr('data-width'), 10);
            var origin_height = parseFloat($(img).attr('data-height'), 10);
            var origin_ratio = origin_width/origin_height;
            var print_ratio = p_width/p_height;

            if(origin_ratio > 1 && print_ratio < 1){
              // Make smaller number always first.
              // Swap the width-height of print size in case of landscape image.
              var temp = p_width;
              p_width = p_height;
              p_height = temp;
            }

            //console.log('input:' + p_width + 'x' + p_height + '; origin ratio: ' +
            //  origin_ratio + '; print ratio: ' + print_ratio);

            image_util.resize_image(img, {width: p_width, height: p_height, ratio: origin_ratio});
            image_util.resize_frame(img, {width: p_width, height: p_height});
          }
        }
      });
      // Force change of page-loading.
      $('.print-sizes-container .print-size:first').attr('checked', 'true');
      $('.print-sizes-container .print-size:checked').change();

  = javascript_include_tag 'app/order_image.js'
