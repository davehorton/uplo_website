- content_for :body_class, 'order-page'
- content_for :top_content do
  .text.black.bold.font16.left Checkout - Step 2 of 2
  .line-separator.left

.wrapper
  = simple_form_for(@order, :url => "/payments/checkout?type=an", :html => {:class => "card_form left", :id => 'order-shippings'}) do |f|
    = hidden_field_tag :order_id, @order.id

    #billing-address.order_summary.left
      .header
        %span.text.black.bold.font16.left Billing Address
        .italic.text.heavy-gray.font11.left
          %span{:style=>'color:red;'} &nbsp;&nbsp;&nbsp;*
          Required Fields
      .line-separator.left
      = f.fields_for :billing_address do |billing_f|
        .inputs.left
          = render "orders/address_fields", :address => billing_f
          .info
            = check_box_tag :ship_to_billing, 1, true, :class => 'left'
            = label_tag :ship_to_billing, 'Ship Items to the Above Billing Address', :style => 'line-height:15px; width:auto;', :class => 'left'

    .left
      #shipping-address.order_summary.left
        .header
          %span.text.black.bold.font16.left Shipping Address
          .italic.text.heavy-gray.font11.left.hide
            %span{:style=>'color:red;'} &nbsp;&nbsp;&nbsp;*
            Required Fields
        .line-separator.left
        .edit.left
          %span Item(s) will be shipped to your billing address
          %a.right{:href => '#'} Edit
        .inputs.clear.hide
          = f.fields_for :shipping_address do |shipping_f|
            = render "orders/address_fields", :address => shipping_f

      .order_summary.clear{:style => "padding-top:35px;"}
        .header
          .text.black.bold.font16.left Payment Information
          .italic.text.heavy-gray.font11.left.cc_info{:style => ("display:none;" if has_payment_profile?)}
            %span{:style=>'color:red;'} &nbsp;&nbsp;&nbsp;*
            Required Fields
        .line-separator.left
        - if has_payment_profile?
          .inputs.left
            = check_box_tag :use_stored_cc, 1, true
            = label_tag :use_stored_cc, "Use stored Credit Card", :style => "height: 20px;"

        .inputs.left.cc_info{:style => ("display:none;" if has_payment_profile?)}
          = f.fields_for :user do |user_f|
            .info
              = user_f.label :name_on_card, "Name on Card <span style='color:red;'>*</span>".html_safe
              - message = first_error_message_for(user_f.object, :name_on_card)
              - css = message ? "error" : nil
              = user_f.input_field :name_on_card, :autofocus => true, :required => true, :label => false, :class => css, :title => message, :value => nil
            .info
              = user_f.label :card_type, "Card Type <span style='color:red;'>*</span>".html_safe
              - message = first_error_message_for(user_f.object, :card_type)
              - css = message ? "error" : nil
              = user_f.select :card_type, options_for_select(CreditCard.brands, current_user.card_type), {:prompt => 'Select One', :class => css, :title => message}
            .info
              = user_f.label :card_number, "Card Number <span style='color:red;'>*</span>".html_safe
              - message = first_error_message_for(user_f.object, :card_number)
              - css = message ? "error" : nil
              = user_f.input_field :card_number, :autofocus => true, :required => true, :label => false, :class => css, :title => message, :value => nil
            .info.expiration-date
              - today = Date.today
              = user_f.label :expiration, "Expiration Date <span style='color:red;'>*</span>".html_safe
              = user_f.date_select :expiration, :discard_day => true, :start_year => Date.today.year, :end_year => (Date.today.year+10), :add_month_numbers => false, :order => [:month, :year], :required => true, :label => false, :default => { :day => '1', :mon => '12' }, :prompt => { :month => 'Month', :year => 'Year' }

            .info
              = user_f.label :cvv, "CVV <span style='color:red;'>*</span> <span id='cvv-explanation'>What's This?</span>".html_safe
              - message = first_error_message_for(user_f.object, :cvv)
              - css = message ? "error" : nil
              = user_f.input_field :cvv, :required => true, :label => false, :maxlength => 4, :class => css, :title => message, :value => nil

    #order-summary.order_summary.no-padding-right.left{:style => "height:auto;min-height: 100px;"}
      .header.text.black.bold.font16 Order Summary
      .solid-block.left
        - subtotal = 0
        - (0...@order.line_items.length).each do |idx|
          - line_item = @order.line_items[idx]
          - subtotal += line_item.price * line_item.quantity
          .block.text.black.line22.left{:style => "#{'padding-top:0;' if idx==0}"}
            .name.line.text.bold.line12.left= line_item.image.name.truncate(36)
            .line.no-background.left
              .text.font10.left QTY
              .text.bold.font13.right= line_item.quantity
            .line.left
              .text.font10.left PRICE
              .price.text.bold.font13.right= number_to_currency(line_item.total_price)
            .line.no-background.left
              .text.font10.left TAX
              .tax.text.bold.font13.right= (line_item.tax > 0 ? number_to_currency(line_item.tax * line_item.quantity) : "--")
        .summary.text.black.font11.line18.right
          .text.bold.right
            .left Subtotal:
            .right= number_to_currency subtotal
          .text.right.clear
            .left Tax:
            .tax.right= (@order.tax > 0 ? number_to_currency(@order.tax) : "--")
          .text.clear
            .left Shipping & Handling:
            .right#shipping_fee= number_to_currency SHIPPING_FEE

        .line-separator.left
        .summary.right
          .grand-total.text.black.bold.font14.line18.right.clear
            .left Grand Total:
            #grand-total.right= number_to_currency(@order.tax + subtotal + SHIPPING_FEE)
        .line-separator.left
        .submit.right

= render :partial => 'orders/cvv_form', :layout => 'layouts/bubble', :locals => { :id => 'cvv-form' }

- content_for :js do
  = javascript_tag do
    :erb
      <% if (@remove_shipping_info != nil && @remove_shipping_info == false) %>
        $('#shipping-address .edit a').click();
      <% end %>
      var regions_tax = <%= Order::REGION_TAX.to_json %>;
