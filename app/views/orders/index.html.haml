- content_for :head do
  = stylesheet_link_tag("scss/cart_new.css")


- content_for :top_content do
  .text.black.bold.font16.left Checkout - Step 2 of 2
  .line-separator.left

.wrapper
  = simple_form_for(:card, :url => "/payments/checkout?type=an", :html => {:class => "card_form left", :id => 'order-shippings'}) do |f|
    #billing-address.order_summary.left
      .header
        %span.text.black.bold.font16.left Billing Address
        .italic.text.heavy-gray.font11.left
          %span{:style=>'color:red;'} &nbsp;&nbsp;&nbsp;*
          Required Fields
      .line-separator.left
      .inputs.left
        .info
          = label_tag :billing_first_name, "First Name <span style='color:red;'>*</span>".html_safe
          = text_field :billing, :first_name, :autofocus => true, :required => true
        .info
          = label_tag :billing_last_name, "Last Name <span style='color:red;'>*</span>".html_safe
          = text_field :billing, :last_name, :required => true
        .info
          = label_tag :billing_company, "Company"
          = text_field :billing, :company, :required => false
        .info
          = label_tag :billing_street_address, "Street Address <span style='color:red;'>*</span>".html_safe
          = text_field :billing, :street_address, :required => true
        .info
          = label_tag :billing_city, "City <span style='color:red;'>*</span>".html_safe
          = text_field :billing, :city, :required => true
        .info
          = label_tag :billing_zip, "Postal/Zip Code <span style='color:red;'>*</span>".html_safe
          = text_field :billing, :zip, :required => true
        .info
          = label_tag :billing_state, "State <span style='color:red;'>*</span>".html_safe
          = select :billing, :state, state_options, {:required => true,  :prompt => '- Please Select --'}
        .info
          = label_tag :billing_phone, "Phone Number <span style='color:red;'>*</span>".html_safe
          = text_field :billing, :phone, :as => :string, :required => false
        .info
          = label_tag :billing_fax, "Fax Number"
          = text_field :billing, :fax
        .info
          / = hidden_field_tag 'billing[ship_to_billing]', 0
          %input{ :type => 'checkbox', :name => 'billing[ship_to_billing]', :value => '1', :id => 'billing_ship_to_billing', :class => 'left', :checked => 'checked' }
          = label_tag :billing_ship_to_billing, 'Ship Items to the Above Billing Address', :style => 'width:auto;', :class => 'left'

    .left
      #shipping-address.order_summary.left
        .header
          %span.text.black.bold.font16.left Shipping Address
          .italic.text.heavy-gray.font11.left.hide
            %span{:style=>'color:red;'} &nbsp;&nbsp;&nbsp;*
            Required Fields
        .line-separator.left
        .edit.left
          %span Item(s) will be shipped to your billing address
          %a.right{:href => '#'} Edit
        .inputs.clear.hide
          .info
            = label_tag :shipping_first_name, "First Name <span style='color:red;'>*</span>".html_safe
            = text_field :shipping, :first_name, :autofocus => true, :required => true
          .info
            = label_tag :shipping_last_name, "Last Name <span style='color:red;'>*</span>".html_safe
            = text_field :shipping, :last_name, :required => true
          .info
            = label_tag :shipping_company, "Company"
            = text_field :shipping, :company, :required => false
          .info
            = label_tag :shipping_street_address, "Street Address <span style='color:red;'>*</span>".html_safe
            = text_field :shipping, :street_address, :required => true
          .info
            = label_tag :shipping_city, "City <span style='color:red;'>*</span>".html_safe
            = text_field :shipping, :city, :required => true
          .info
            = label_tag :shipping_zip, "Postal/Zip Code <span style='color:red;'>*</span>".html_safe
            = text_field :shipping, :zip, :required => true
          .info
            = label_tag :shipping_state, "State <span style='color:red;'>*</span>".html_safe
            = select :shipping, :state, state_options, {:required => true,  :prompt => '- Please Select --'}
          .info
            = label_tag :shipping_phone, "Phone Number <span style='color:red;'>*</span>".html_safe
            = text_field :shipping, :phone, :as => :string, :required => false
          .info
            = label_tag :shipping_fax, "Fax Number"
            = text_field :shipping, :fax

      .order_summary.clear{:style => "padding-top:35px;"}
        .header
          .text.black.bold.font16.left Payment Information
          .italic.text.heavy-gray.font11.left
            %span{:style=>'color:red;'} &nbsp;&nbsp;&nbsp;*
            Required Fields
        .line-separator.left
        .inputs.left
          .info
            = f.label :name_on_card, "Name on Card <span style='color:red;'>*</span>".html_safe
            = f.input :name_on_card, :autofocus => true, :required => true, :label => false
          .info
            = f.label :card_type, "Card Type <span style='color:red;'>*</span>".html_safe
            = f.select :card_type, options_for_select({"American Express" => "USA_express", "Discover" => "discover", "Visa" => "visa", "JCB" => "jcb", "Diners Club/ Carte Blanche" => "dinners_club", "Master Card" => "master_card"}), {:prompt => '- Please Select --'}
          .info
            = f.label :card_number, "Card Number <span style='color:red;'>*</span>".html_safe
            = f.input :card_number, :autofocus => true, :required => true, :label => false
          .info.expiration-date
            - today = Date.today
            = f.label :expires_on, "Expiration Date <span style='color:red;'>*</span>".html_safe
            = f.date_select :expires_on, :discard_day => true, :start_year => Date.today.year, :end_year => (Date.today.year+10), :add_month_numbers => false, :order => [:month, :year], :required => true, :label => false, :default => { :day => '1', :mon => '12' }, :prompt => { :month => 'Month', :year => 'Year' }

          .info
            = f.label :cvv, "CVV <span style='color:red;'>*</span> <span id='cvv-explanation'>What's This?</span>".html_safe
            = f.input :cvv, :autofocus => true, :required => true, :label => false
          = hidden_field_tag :order_id, @order.id

    #order-summary.order_summary.no-padding-right.left{:style => "height:auto;min-height: 100px;"}
      .header.text.black.bold.font16 Order Summary
      .solid-block.left
        - subtotal = 0
        - tax_total = 0
        - (0...@order.line_items.length).each do |idx|
          - line_item = @order.line_items[idx]
          - subtotal += line_item.price * line_item.quantity
          - tax_total += line_item.tax
          .block.text.black.line22.left{:style => "#{'padding-top:0;' if idx==0}"}
            .name.line.text.bold.line12.left= line_item.image.name.truncate(36)
            .line.no-background.left
              .text.font10.left QTY
              .text.bold.font13.right= line_item.quantity
            .line.left
              .text.font10.left PRICE
              .text.bold.font13.right= number_to_currency(line_item.price * line_item.quantity)
            .line.no-background.left
              .text.font10.left TAX
              .text.bold.font13.right= number_to_currency line_item.tax
        .summary.text.black.font11.line18.right
          .text.bold.right
            .left Subtotal:
            .right= number_to_currency subtotal
          .text.right.clear
            .left Tax:
            .right= number_to_currency tax_total
          .text.clear
            .left Shipping & Handling:
            .right= number_to_currency SHIPPING_FEE

        .line-separator.left
        .summary.right
          .grand-total.text.black.bold.font14.line18.right.clear
            .left Grand Total:
            .right= number_to_currency(tax_total + subtotal + SHIPPING_FEE)
        .line-separator.left
        .submit.right

= render :partial => 'cvv_form', :layout => 'layouts/bubble', :locals => { :id => 'cvv-form' }

- content_for :js do
  = javascript_include_tag 'app/order.js'
  = javascript_tag do
    :erb
      $("#shipping_phone").keypress(function (event) {
        if (!event.charCode) return true;
        var reg = /^\d*$/;
        var part1 = this.value.substring(0,this.selectionStart);
        var part2 = this.value.substring(this.selectionEnd,this.value.length);
        if (!reg.test(part1 + String.fromCharCode(event.charCode) + part2)){
          return false;
        }
      });
      $("#billing_phone").keypress(function (event) {
        var reg = /^\d*$/;
        if (!event.charCode) return true;
        var part1 = this.value.substring(0,this.selectionStart);
        var part2 = this.value.substring(this.selectionEnd,this.value.length);
        if (!reg.test(part1 + String.fromCharCode(event.charCode) + part2)){
          return false;
        }
      });
      $("#shipping_fax").keypress(function (event) {
        if (!event.charCode) return true;
        var reg = /^\d*$/;
        var part1 = this.value.substring(0,this.selectionStart);
        var part2 = this.value.substring(this.selectionEnd,this.value.length);
        if (!reg.test(part1 + String.fromCharCode(event.charCode) + part2)){
          return false;
        }
      });
      $("#billing_fax").keypress(function (event) {
        var reg = /^\d*$/;
        if (!event.charCode) return true;
        var part1 = this.value.substring(0,this.selectionStart);
        var part2 = this.value.substring(this.selectionEnd,this.value.length);
        if (!reg.test(part1 + String.fromCharCode(event.charCode) + part2)){
          return false;
        }
      });
      $("#shipping_zip").keypress(function (event) {
        var reg = /^\d{0,5}$/;
        if (!event.charCode) return true;
        var part1 = this.value.substring(0,this.selectionStart);
        var part2 = this.value.substring(this.selectionEnd,this.value.length);
        if (!reg.test(part1 + String.fromCharCode(event.charCode) + part2)){
          return false;
        }
      });
      $("#billing_zip").keypress(function (event) {
        var reg = /^\d{0,5}$/;
        if (!event.charCode) return true;
        var part1 = this.value.substring(0,this.selectionStart);
        var part2 = this.value.substring(this.selectionEnd,this.value.length);
        if (!reg.test(part1 + String.fromCharCode(event.charCode) + part2)){
          return false;
        }
      });
      $('#shipping-address .edit a').bind('click', function(){
        $('#shipping-address .inputs').removeClass('hide').addClass('show');
        $('#shipping-address .edit').removeClass('show').addClass('hide');
        $('#billing_ship_to_billing').attr('checked', false);
        $('#shipping-address .header .italic').removeClass('hide').addClass('show');
      });
      $('#billing_ship_to_billing').bind('click', function(){
        console.log($(this).attr('checked'));
        if($(this).attr('checked') == 'checked'){
          $('#shipping-address .inputs').removeClass('show').addClass('hide');
          $('#shipping-address .header .italic').removeClass('show').addClass('hide');
          $('#shipping-address .edit').removeClass('hide').addClass('show');
        } else {
          $('#shipping-address .inputs').removeClass('hide').addClass('show');
          $('#shipping-address .header .italic').removeClass('hide').addClass('show');
          $('#shipping-address .edit').removeClass('show').addClass('hide');
        }
      });
      $('.submit').bind('click', function(){
        if($('#shipping-address .edit.hide').length==0) {
          $('#shipping-address .inputs').text("");
        }

        // Google Analytics
        _gaq.push(['_trackEvent', 'UPLO Web / Check Out', 'Place Order', 'checkout', -1]);

        $('#order-shippings').submit();
      });

