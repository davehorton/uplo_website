- content_for :head do
  = javascript_include_tag("lib/jail.min.js")
  = javascript_include_tag("app/gallery.js")
  = stylesheet_link_tag("scss/new_image.css", "scss/banner.css")

- content_for :banner do
  = render :partial => "home/banners/spotlight"

- content_for :right_content do
  .breadcrum.left
    .left Recent Upload
    %a.more.left{:href => "#{url_for(:controller => 'home', :action => 'browse')}"} +VIEW ALL
  .clear
  #recent-images
    .images-wrapper.clearfix
    - if @images.blank?
      .empty-data= "There is no image. Please add image."
    - else
      - (0...@images.length). each do |idx|
        - image = @images[idx]
        - url = url_for(:controller => "images", :action => "browse", :id => "#{image.id}")
        - additional_class = (idx%3 == 0) ? "no-padding-left" : ((idx%3==2) ? "no-padding-right" : "")
        .image-container.small{:id => "image-container-#{image.id}", :title=>"#{image.name}", :class => "#{additional_class}"}
          %a{ :href => "#{url}" }
            %dl.entry
              %dt.preview
                = async_image_tag(image.data.url(:thumb), :class => "image-thumb image small")


.breadcrum.left
  .left Spotlight Images
  %a.more.left{:href => "#{url_for(:controller => 'home', :action => 'browse')}"} +VIEW ALL
.clear
#spotlight-images.left{:style => ""}
  .images-wrapper.clearfix
  - if @images.blank?
    .empty-data= "There is no image. Please add image."
  - else
    - (0...@images.length). each do |idx|
      - image = @images[idx]
      - url = url_for(:controller => "images", :action => "browse", :id => "#{image.id}")
      - additional_class = (idx%4 == 0) ? "no-padding-left" : ((idx%4==3) ? "no-padding-right" : "")
      .image-container.thumb{:id => "image-container-#{image.id}", :title=>"#{image.name}", :class => "#{additional_class}"}
        %a{ :href => "#{url}" }
          %dl.entry
            %dt.preview
              = async_image_tag(image.data.url(:thumb), :class => "image-thumb")


:erb
  <script type="text/javascript">
    gallery.setup();
  </script>
