- content_for :head do
  = javascript_include_tag("lib/jail.min.js", 'lib/jquery.ui.position.js', 'lib/jquery.contextMenu.js')
  = javascript_include_tag("app/gallery.js")
  = stylesheet_link_tag("scss/new_image.css", 'jquery.contextMenu.css')

- content_for :top_content do
  %div{:style => "padding-top:15px;"}
    .breadcrum.left
      %span My Galleries
    %a#new-gallery.right{ :href => '/galleries/new' }

.wrapper
  - if @galleries.blank?
    .empty-data= "There is no gallery. Let create one."
  - else
    - (0...@galleries.length). each do |idx|
      - gallery = @galleries[idx]
      - additional_class = (idx%6 == 0) ? "no-padding-left" : ((idx%6==5) ? "no-padding-right" : "")
      .gallery-container.left{ :id => "gallery-container-#{gallery.id}", :class => "#{additional_class}" }
        %a.image-container.thumb{ :href => gallery_images_path(gallery), :title=>"#{gallery.name}" }
          = async_image_tag(gallery_cover_image_url(gallery), :class => "gallery-cover-image image thumb")

        .gallery-info.clear
          .text.bold.name{:title => gallery.name}=raw gallery.name.truncate(25)
          .text.normal.photo-number= (gallery.images.length > 0 ? pluralize(gallery.images.length, "image") : "No image")
          .text.normal.update-time= "Last updated: #{gallery.updated_at_string}"
          .text.fuzzy.permission= gallery.permission_string.titleize
          %a.share-link.text.normal{ :id => "share-context-menu-#{gallery.id}", :href=>'#', :data => { :public_url => "#{gallery.public_link}", :cover_url => "#{gallery_cover_image_url(gallery)}" } } Share
  = render_pagination(@galleries, {:controller => "galleries", :action => params[:action]})

- content_for :js do
  = javascript_tag do
    :erb
      gallery.setup();

      $(function(){
        $.contextMenu({
          selector: '.share-link',
          trigger: 'left',
          ignoreRightClick: true,
          items: {
            "email": {
              name: "Share via Email",
              icon: "email",
              callback: function(key, opt, e){
                url = $(this).attr('data-public_url');
                alert('This feature is coming soon.');
              }
            },
            "facebook": {
              name: "Share on Facebook",
              icon: "facebook",
              callback: function(key, opt, e){
                url = 'http://www.facebook.com/sharer.php?u=' + $(this).attr('data-public_url');
                window.open(url,'_blank');
              }
            },
            "twitter": {
              name: "Share on Twitter",
              icon: "twitter",
              callback: function(key, opt, e){
                public_url = encodeURIComponent($(this).attr('data-public_url'));
                url = 'http://twitter.com/share?url=' + public_url + '&text=' + encodeURIComponent('from UPLO');
                window.open(url,'_blank');
              }
            },
            "tumblr": {
              name: "Share on Tumblr",
              icon: "tumblr",
              callback: function(key, opt, e){
                cover_url = encodeURIComponent($(this).attr('data-cover_url'));
                public_url = encodeURIComponent($(this).attr('data-public_url'));
                url = 'http://www.tumblr.com/share/photo?source=' + cover_url + '&caption=' + encodeURIComponent('from UPLO') + '&clickthru=' + public_url;
                window.open(url,'_blank');
              }
            },
            "pinterest": {
              name: "Share on Pinterest",
              icon: "pinterest",
              callback: function(key, opt, e){
                url = $(this).attr('data-public_url');
                alert('This feature is coming soon.');
              }
            }
          }
        });
    });
