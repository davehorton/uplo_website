//= require 'lib/jquery.center.js'

/**
 * Utility methods for image processing.
 */
image_util = {
  // Convert inch -> pixel
  inch_to_px: function(inch, dpi){
    if(!dpi)
      dpi = 72; // Default DPI
    return inch * dpi;
  },
  
  // Detect the curent DPI of the screen.
  // Requires: jQuery.
  detect_dpi: function(){
    var tmp_div = $('<div style="display: block; height: 1in; left: -100%; \
                    position: absolute; top: -100%;  width: 1in; padding:0; margin:0;"></div>');
    $('body').append(tmp_div);
    var width = $(tmp_div).width();
    $(tmp_div).remove();
    return width;
  },
  
  // Resize an image.
  // Requires: jquery.center.js plugin.
  resize_image: function(img, params){
    if(!params.ratio)
      params.ratio = 1.5;
      
    var new_w = params.width;
    var new_h = params.height;
    var correct_h = new_w / params.ratio;
    
    if(correct_h < new_h){
      new_w = new_h * params.ratio;
    }
    else {
      var correct_w = new_h * params.ratio;
      if(correct_w < new_w){
        new_h = correct_h;
      }
    }
    
    $(img).width(new_w).height(new_h);
    $(img).css('max-width', new_w);
    $(img).css('max-height', new_h);
    $(img).center();
    
    //console.log('output:' +  $(img).width() + 'x' + $(img).height());
  },
  
  resize_frame: function (img, params){
    var parent = $(img).parents('.image-container');
    if(!params)
      params = {};
      
    if(params.auto){
      $(parent).width('auto');
      $(parent).height('auto');
    }
    else{
      var width = $(img).width();
      if(params.width > 0 && width > params.width)
        width = params.width;

      var height = $(img).height();
      if(params.height > 0 && height > params.height)
        height = params.height;
      
      var ratio = 1;
      
      if(!width){
        width = parseFloat($(img).attr('data-width'));
      }      
      var parent_width = parseFloat($(parent).css('max-width'));
      if(width > 0 && width <= parent_width){
        $(parent).width(width);
      }
      else if(width > 0 && width > parent_width){
        ratio = parent_width/width;
        $(parent).width(parent_width);        
      }
      
      if(height > 0){
        $(parent).height(ratio * height);
      }
      
      $(img).center();
    }
  },
  
  // Calculate ratio from the size string:
  // Ex: ratio_from_size('5x7') //=> 0.714
  ratio_from_size: function(size_string){
    var sizes = size_string.toLowerCase().split('x', 2);
    var ratio = 0;
    if(sizes.length == 2){
      sizes[0] = parseFloat(sizes[0]);
      sizes[1] = parseFloat(sizes[1]);
      if(sizes[1] > 0)
        ratio = sizes[0] / sizes[1];
    }
    
    return ratio;
  }
};


/**
 * Methods for order's previewing
 */ 
order_preview = {
  max_width: 638,
  
  // Alias from input values to meaningful values.
  frame_alias: {
    '1': 'print_only',
    '2': 'canvas',
    '3': 'plexi',
    '4': 'black',
    '5': 'white',
    '6': 'light_wood',
    '7': 'rustic_wood'
  },
  
  // Image frames info
  frames: {
    canvas: {
      scalable: false,
      url: "<%= asset_path('img-frames/canvas.png') %>"      
    },
    
    plexi: {
      scalable: false,
      url: "<%= asset_path('img-frames/plexi.png') %>" 
    },
    
    black: {
      scalable: true,
      url_top: "<%= asset_path('img-frames/black-top.png') %>",
      url_right: "<%= asset_path('img-frames/black-right.png') %>",
      url_bottom: "<%= asset_path('img-frames/black-bottom.png') %>",
      url_left: "<%= asset_path('img-frames/black-left.png') %>",
      margin_top: 83,
      margin_left: 83,
      
      // If you don't specify the corner_width, it will auto-detect and get the margin_left instead.
      corner_width: 250
    },
    
    white: {
      scalable: true,
      url_top: "<%= asset_path('img-frames/white-top.png') %>",
      url_right: "<%= asset_path('img-frames/white-right.png') %>",
      url_bottom: "<%= asset_path('img-frames/white-bottom.png') %>",
      url_left: "<%= asset_path('img-frames/white-left.png') %>",
      margin_top: 81,
      margin_left: 81 
    },
    
    light_wood: {
      scalable: true,
      url_top: "<%= asset_path('img-frames/lightwood-top.png') %>",
      url_right: "<%= asset_path('img-frames/lightwood-right.png') %>",
      url_bottom: "<%= asset_path('img-frames/lightwood-bottom.png') %>",
      url_left: "<%= asset_path('img-frames/lightwood-left.png') %>",
      margin_top: 107,
      margin_left: 101,
      
      // If you don't specify the corner_width, it will auto-detect and get the margin_left instead.
      corner_width: 118
    },
    
    rustic_wood: {
      scalable: true,
      url_top: "<%= asset_path('img-frames/rustic-top.png') %>",
      url_right: "<%= asset_path('img-frames/rustic-right.png') %>",
      url_bottom: "<%= asset_path('img-frames/rustic-bottom.png') %>",
      url_left: "<%= asset_path('img-frames/rustic-left.png') %>",
      margin_top: 122,
      margin_left: 123,
      
      // If you don't specify the corner_width, it will auto-detect and get the margin_left instead.
      corner_width: 350
    }
  },
  
  // Preload images for better UX.
  preload_images: function(){
    
  },
  
  // Adjust frame's size and image's size with frame's id.
  adjust_image_frame_sizes_with_num: function(frame_num){
    var frame_name = order_preview.frame_alias[frame_num];
    order_preview.adjust_image_frame_sizes(frame_name);
  },
  
  // Adjust frame's size and image's size with frame's name
  adjust_image_frame_sizes: function(frame_name){
    var frame_info = order_preview.frames[frame_name];
    
    var frame = $('#preview-frame .image-frame');
    var img = $('#preview-frame > img.image');
    
    if(frame_name == 'canvas' || frame_name == 'plexi'){
      // Hide the image
      $(img).css('display', 'none');
      frame.css({
        position: 'relative',
      });
    }
    else{
      // Show the image
      $(img).css({
        display: 'inline-block',
        position: 'static'
      });
      frame.css({
        left: 0,  
        position: 'absolute',
        top: 0
      });
    } 
    
    if(!frame_info){
      // Remove the frame
      $(frame).find('img').remove();
      
      // Restore the image's size
      $(img).width('auto');
      $(img).height('auto');
      
      return false;
    }    
    
    if(!frame_info.scalable){
      // Change frame's image
      var frame_img = $('<img src="' + frame_info.url + '"/>');
      frame.html(frame_img);
      
      $(frame_img).load(function(){
        var height = $(this).height();
        $(frame_img).parent().height(height);
        $('#preview-frame').height(height);
      });
      
      if($(frame_img).prop('complete')){
        $(frame_img).load();
      }
    }
    
    // Show the frame layer in front of the image.
    frame.css('z-index', 10);
    img.css('z-index', 9);
    
    // Scale the image and frame to fit the preview canvas
    if(frame_info.scalable){
      var img_width = parseFloat($(img).attr('data-original-width'));
      var img_height = parseFloat($(img).attr('data-original-height'));
      
      // Store the original width and height of the image.      
      if(!img_width || !img_height){
        img_width = $(img).width();
        $(img).attr('data-original-width', img_width);
        
        img_height = $(img).height();
        $(img).attr('data-original-height', img_height)
      }
      
      if(img_width <= 0 || img_height <= 0)
        return false;
        
      if(img_width > order_preview.max_width)
        img_width = order_preview.max_width;
        
      var frame_width = img_width + frame_info.margin_left * 2;
      var frame_height = img_height + frame_info.margin_top * 2;
      
      if(frame_width >= order_preview.max_width){
        frame_width = order_preview.max_width;
        var new_img_width = frame_width - frame_info.margin_left * 2;   
        
        // Scale the image height with the image's ratio.
        var ratio = image_util.ratio_from_size($('#line_item_size').val());
        var new_img_height = 0;
        if(ratio > 0){
          // Because our current ratio is always the result of min_number/max_number,
          // we must detect the image is portrait or landscape to get the correct ratio.
          if(img_width < img_height)
            ratio = 1/ratio; // Inverse the ratio.
            
          new_img_height = new_img_width * ratio;
        }
        else
          new_img_height = img_height * (new_img_width / img_width);
        
        frame_height = new_img_height + frame_info.margin_top * 2;
        
        // Set new values
        img_width = new_img_width;
        img_height = new_img_height;
      }
      
      // Finally, change the image and frame size.
      $(frame).width(frame_width);
      $(frame).height(frame_height);      
      $(img).width(img_width);
      $(img).height(img_height);      
      
      // Setup frame element
      order_preview.init_frame_elements(frame, frame_info, frame_width, frame_height);
      
      // Change image position
      $(img).css({
        position: 'absolute',
        top: frame_info.margin_top,
        left: frame_info.margin_left
      });
      
      // Change the container frame
      $('#preview-frame').width(frame_width);
      $('#preview-frame').height(frame_height);
    }
  },  
  
  init_frame_elements: function(frame, frame_info, frame_width, frame_height){
    var url_top = frame_info.url_top;
    var url_right = frame_info.url_right;
    var url_bottom = frame_info.url_bottom;
    var url_left = frame_info.url_left;
    
    // Clean all
    $(frame).html("");
    
    // Build 4 sides of the frame.
    
    //====== top =======
    var frame_img = $('<img id="frame-top" src="' + url_top + '"/>');
    frame.html(frame_img);
    frame_img.css({
      position: 'absolute',
      left: 0,
      top: 0
    });
    
    frame_img.width(frame_width);
    frame_img.height(frame_info.margin_top);
    
    //====== right =======
    frame_img = $('<img id="frame-right" src="' + url_right + '"/>');
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      right: 0,
      top: frame_info.margin_top
    });    
    frame_img.width(frame_info.margin_left);
    frame_img.height(frame_height - frame_info.margin_top*2);
    
    //====== bottom =======
    frame_img = $('<img id="frame-bottom" src="' + url_bottom + '"/>');
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      left: 0,
      top: (frame_height - frame_info.margin_top)
    });    
    frame_img.width(frame_width);
    frame_img.height(frame_info.margin_top);
    
    //====== left =======
    frame_img = $('<img id="frame-left" src="' + url_left + '"/>');
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      left: 0,
      top: frame_info.margin_top
    });
    frame_img.width(frame_info.margin_left);
    frame_img.height(frame_height - frame_info.margin_top*2);
    
    // Build 4 corners of the frame.
    
    // Detect the corner size.
    var corner_width = frame_info.corner_width;
    if(!corner_width || corner_width <= 0)
      corner_width = frame_info.margin_left;
      
    //====== conner: top-left =======
    var tmp_img = $('<img id="frame-top-left" src="' + url_top + '"/>');
    tmp_img.css({
      position: 'absolute',
      top: 0,
      left: 0
    });
    $(tmp_img).height(frame_info.margin_top);
    
    frame_img = $('<div></div>').append(tmp_img);
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      overflow: 'hidden',
      left: 0,
      top: 0,
      width: corner_width,
      height: frame_info.margin_top,
      'z-index': 11
    });
    
    //====== conner: top-right =======
    var tmp_img = $('<img id="frame-top-right" src="' + url_top + '"/>');
    tmp_img.css({
      position: 'absolute',
      right: 0,
      top: 0
    });
    $(tmp_img).height(frame_info.margin_top);
    
    frame_img = $('<div></div>').append(tmp_img);
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      overflow: 'hidden',
      right: 0,
      top: 0,
      width: corner_width,
      height: frame_info.margin_top,
      'z-index': 11
    });
    
    //====== conner: bottom-left =======
    var tmp_img = $('<img id="frame-bottom-left" src="' + url_bottom + '"/>');
    tmp_img.css({
      position: 'absolute',
      left: 0,
      top: 0
    });
    $(tmp_img).height(frame_info.margin_top);
    
    frame_img = $('<div></div>').append(tmp_img);
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      overflow: 'hidden',
      left: 0,
      bottom: 0,
      width: corner_width,
      height: frame_info.margin_top,
      'z-index': 11
    });
    
    //====== conner: bottom-right =======
    var tmp_img = $('<img id="frame-bottom-right" src="' + url_bottom + '"/>');
    tmp_img.css({
      position: 'absolute',
      right: 0,
      top: 0
    });
    $(tmp_img).height(frame_info.margin_top);
    
    frame_img = $('<div></div>').append(tmp_img);
    frame.append(frame_img);
    frame_img.css({
      position: 'absolute',
      overflow: 'hidden',
      right: 0,
      bottom: 0,
      width: corner_width,
      height: frame_info.margin_top,
      'z-index': 11
    });
  },
  
  // Run all initial setup on page loaded.
  setup: function(){
    // Change the frame
    $('#line_item_moulding').change(function(){
      order_preview.adjust_image_frame_sizes_with_num($(this).val());
    });
    
    // Change the image
    $('#line_item_size').change(function(){      
      var url = $(this).find("option[value=" + $(this).val() + "]").attr('data-url');
      if(url){
        var img = $('#preview-frame > img.image');
        $(img).attr('src', url);       
      }
    });
    
    // Force change the frame
    var img = $('#preview-frame > img.image');
    $(img).load(function(){
      // Store the image's original size
      $(img).attr('data-original-width', $(img).width());
      $(img).attr('data-original-height', $(img).height())
      
      order_preview.adjust_image_frame_sizes_with_num($('#line_item_moulding').val());
    });
    
    // In case the image was cached.          
    if($(img).prop('complete')){
      $(img).load();
    }
    
    // Force change on page-loading.
    $('#line_item_size').change();    
  }
};
